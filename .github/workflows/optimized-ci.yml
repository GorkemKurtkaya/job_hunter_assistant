name: Optimized CI/CD with Cache

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-optimized:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Cache Next.js build
      uses: actions/cache@v4
      with:
        path: |
          frontend/.next/cache
          frontend/node_modules/.cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-
          
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run linting
      working-directory: ./frontend
      run: npm run lint
      
    - name: Build with cache
      working-directory: ./frontend
      run: npm run build
      
    - name: Check build output
      working-directory: ./frontend
      run: |
        echo "üîç Checking build output..."
        if [ -d ".next" ]; then
          echo "‚úÖ .next directory exists"
          ls -la .next/
        else
          echo "‚ùå .next directory not found"
          exit 1
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ github.sha }}
        path: frontend/.next/
        retention-days: 30
        if-no-files-found: error

  backend-optimized:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
        
    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Security audit
      working-directory: ./backend
      run: |
        # Cross-platform audit check
        npm audit --audit-level=moderate || echo "Audit completed with warnings"
      
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-files-${{ github.sha }}
        path: backend/
        retention-days: 30

  test-matrix:
    needs: [frontend-optimized, backend-optimized]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18, 20]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Test frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run lint
        npx tsc --noEmit
        
    - name: Test backend
      working-directory: ./backend
      run: |
        npm ci
        # Windows PowerShell uyumlu audit check
        npm audit --audit-level=moderate || echo "Audit completed with warnings"

  deploy-production:
    needs: [frontend-optimized, backend-optimized, test-matrix]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.frontend-optimized.result == 'success'
    environment: production
    
    steps:
    - name: Check if artifacts exist
      run: |
        echo "üîç Checking if frontend build artifacts exist..."
        echo "Expected artifact name: frontend-build-${{ github.sha }}"
        
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build-${{ github.sha }}
        path: ./frontend-build
        if-no-files-found: warn
        
    - name: Deploy to production
      run: |
        echo "üöÄ Production'a deploy ediliyor..."
        if [ -d "./frontend-build" ]; then
          echo "‚úÖ Frontend build artifacts found"
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh
        else
          echo "‚ùå Frontend build artifacts not found, skipping deploy"
          exit 1
        fi
      env:
        DEPLOY_ENV: production
        DEPLOY_HOST: ${{ secrets.PROD_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
        BACKEND_URL: ${{ secrets.BACKEND_URL }}
